{"version":3,"file":"static/js/852.038fc0fe.chunk.js","mappings":"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","sources":["components/Layout/Default/Navbar.jsx","components/Layout/Default/Footer.jsx","components/Layout/Layout.js","components/common/Hero/Hero.jsx","components/common/Pagination/SmallSetPagination.js","containers/notice/Categories.jsx","containers/notice/Noticia.jsx","containers/notice/Cards.jsx","containers/notice/NoticiaList.jsx","containers/notice/BlogList.jsx","containers/notice/Notices_by_category.jsx","redux/actions/blog/blog.js","redux/actions/categories/categories.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport logo from \"../../../assets/img/MatsushimaChile-Logo.png\"; // Asegúrate de tener el logo en tu directorio de imágenes\r\n\r\nconst links = [\r\n  { to: \"/\", title: \"Bienvenida\" },\r\n  { to: \"/quienes-somos\", title: \"Nosotros\" },\r\n  { to: \"/nuestros-dojos\", title: \"Dojos\" },\r\n  { to: \"/actividades\", title: \"Actividades\" },\r\n  { to: \"/galeria\", title: \"Galeria\" },\r\n  { to: \"/noticias\", title: \"Noticias y Novedades\" },\r\n];\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} alt=\"IKO Matsushima Chile\" className=\"karate-logo\" />\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            {links.map((link, index) => (\r\n              <li key={index} className=\"nav-item dropdown\">\r\n                <Link\r\n                  className={`nav-link ${\r\n                    location.pathname === link.to ? \"active\" : \"\"\r\n                  }`}\r\n                  to={link.to}\r\n                >\r\n                  {link.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white py-4\">\r\n      <div className=\"container text-center\">\r\n        <p className=\"mb-0\">&copy; {new Date().getFullYear()} IKO Matsushima Chile. All rights reserved.</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Navbar from \"./Default/Navbar\";\r\nimport Footer from \"./Default/Footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <main>\r\n      {children}\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst Hero = ({ title, subtitle, heroImage }) => {\r\n  return (\r\n    <section\r\n      className=\"hero d-flex flex-column justify-content-center align-items-center position-relative overflow-hidden text-white\"\r\n      style={{\r\n        backgroundImage: `url(${heroImage})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        minHeight: \"10vh\",\r\n        color: \"black\",\r\n        backgroundAttachment: \"fixed\", // Agrega el efecto parallax\r\n      }}\r\n    >\r\n      <div className=\"hero-overlay bg-dark bg-opacity-50 w-100 h-100 d-flex flex-column justify-content-center align-items-center text-center py-5 px-4\">\r\n        <div className=\"text-center mb-5\">\r\n          <h2 className=\"display-3 fw-bold mb-4 text-shadow\">{title}</h2>\r\n          <p className=\"lead mb-4 text-shadow\">{subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction SmallSetPagination({ list_page, count }) {\r\n  const [active, setActive] = useState(1);\r\n  const [listingsPerPage] = useState(3);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const total = Math.ceil(count / listingsPerPage);\r\n    setTotalPages(total < 1 ? 1 : total);\r\n  }, [count, listingsPerPage]);\r\n\r\n  const visitPage = (page) => {\r\n    setActive(page);\r\n    list_page(page);\r\n  };\r\n\r\n  const previous_number = () => {\r\n    const newPage = active - 1;\r\n    if (newPage >= 1) {\r\n      setActive(newPage);\r\n      list_page(newPage);\r\n    }\r\n  };\r\n\r\n  const next_number = () => {\r\n    const newPage = active + 1;\r\n    if (newPage <= totalPages) {\r\n      setActive(newPage);\r\n      list_page(newPage);\r\n    }\r\n  };\r\n\r\n  const items = [];\r\n  for (let number = 1; number <= totalPages; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === active}\r\n        onClick={() => visitPage(number)}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Pagination className=\"border-top px-4\">\r\n        <Pagination.Prev onClick={previous_number} disabled={active === 1} />\r\n        {items}\r\n        <Pagination.Next\r\n          onClick={next_number}\r\n          disabled={active === totalPages}\r\n        />\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallSetPagination;\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoticiasCat = ({ categories }) => {\r\n  const { pathname } = useLocation();\r\n  const currentCategory = pathname.split(\"/\").pop();\r\n\r\n  const isActiveCategory = (slug) => currentCategory === slug;\r\n  const isAllCategoriesActive = pathname === \"/noticias\";\r\n\r\n  return (\r\n    <div className=\"noticias-cat-container\">\r\n      <nav className=\"noticias-cat-nav\" aria-label=\"Categorías de noticias\">\r\n        <Link\r\n          to=\"/noticias\"\r\n          className={`noticias-cat-link ${\r\n            isAllCategoriesActive ? \"active\" : \"\"\r\n          }`}\r\n          aria-current={isAllCategoriesActive ? \"page\" : undefined}\r\n          aria-label=\"Todas las categorías\"\r\n        >\r\n          Todas\r\n        </Link>\r\n\r\n        {categories &&\r\n          categories.map((category) => (\r\n            <Link\r\n              key={category.id}\r\n              to={`/noticias/categoria/${category.slug}`}\r\n              className={`noticias-cat-link ${\r\n                isActiveCategory(category.slug) ? \"active\" : \"\"\r\n              }`}\r\n              aria-current={\r\n                isActiveCategory(category.slug) ? \"page\" : undefined\r\n              }\r\n              aria-label={`Categoría ${category.name}`}\r\n            >\r\n              {category.name}\r\n            </Link>\r\n          ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoticiasCat.propTypes = {\r\n  categories: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      slug: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default NoticiasCat;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageDef from \"../../assets/img/Hero_notice.jpg\";\r\n// import { BiCategory, Map} from \"react-icons/bi\";\r\nconst Noticia = ({ posts }) => {\r\n  if (!Array.isArray(posts) || posts.length === 0) {\r\n    return <div className=\"noticia-placeholder\">Noticia no disponible</div>;\r\n  }\r\n\r\n  const post = posts[0];\r\n\r\n  const {\r\n    title = \"Título no disponible\",\r\n    thumbnail = ImageDef,\r\n    category = { name: \"Categoría no disponible\" },\r\n    published = \"Fecha no disponible\",\r\n    description = \"Descripción no disponible\",\r\n    slug = \"\",\r\n  } = post;\r\n\r\n  const formattedDate = moment(published).isValid()\r\n    ? moment(published).format(\"DD [de] MMMM [del] YYYY\")\r\n    : \"Fecha no disponible\";\r\n  const shortDescription =\r\n    description.length > 100 ? `${description.slice(0, 100)}...` : description;\r\n\r\n  return (\r\n    <div className=\"noticia\">\r\n      <img\r\n        src={thumbnail}\r\n        alt={title}\r\n        className=\"noticia-image\"\r\n        onError={(e) => {\r\n          e.target.onerror = null;\r\n          e.target.src = ImageDef;\r\n        }}\r\n      />\r\n      <div className=\"noticia-content\">\r\n        <h3 className=\"noticia-title\">{title}</h3>\r\n        <p className=\"noticia-category\">\r\n          <strong>Categoría:</strong> {category.name}\r\n        </p>\r\n        <p className=\"noticia-date\">\r\n          <strong>Publicado el:</strong> {formattedDate}\r\n        </p>\r\n        <p className=\"noticia-description\">{shortDescription}</p>\r\n        <Link to={`/noticias/${slug}`} className=\"noticia-link\">\r\n          Leer más\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoticia.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      thumbnail: PropTypes.string,\r\n      category: PropTypes.shape({\r\n        name: PropTypes.string,\r\n      }),\r\n      published: PropTypes.string,\r\n      description: PropTypes.string,\r\n      slug: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Noticia;\r\n","import React from \"react\";\r\nimport Noticia from \"./Noticia\";\r\n\r\nconst Cards = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <Noticia key={post.id} posts={[post]} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nconst NoticiasList = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      {posts && posts.length > 0 ? (\r\n        <div>\r\n          <Cards posts={posts} />\r\n        </div>\r\n      ) : (\r\n        <p className=\"noticia-placeholder\">No se encontraron noticias.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticiasList;\r\n","import React from \"react\";\r\nimport Categories from \"./Categories\";\r\nimport NoticiasList from \"../notice/NoticiaList\";\r\nimport SmallSetPagination from \"../../components/common/Pagination/SmallSetPagination\";\r\n\r\nconst BlogList = ({\r\n  post,\r\n  get_blog_list_page,\r\n  count,\r\n  categories,\r\n  next,\r\n  previous,\r\n}) => {\r\n  const handleNextPage = (event, nextPage) => {\r\n    event.preventDefault();\r\n    if (nextPage) {\r\n      get_blog_list_page(nextPage);\r\n      window.scrollTo(0, 0); // Scroll hacia arriba\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = (event, previousPage) => {\r\n    event.preventDefault();\r\n    if (previousPage) {\r\n      get_blog_list_page(previousPage);\r\n      window.scrollTo(0, 0); // Scroll hacia arriba\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Categories categories={categories && categories} />\r\n      <div className=\"mt-5\">\r\n        <NoticiasList posts={post && post} />\r\n      </div>\r\n      <SmallSetPagination\r\n        list_page={get_blog_list_page}\r\n        count={count}\r\n        handleNextPage={handleNextPage}\r\n        handlePreviousPage={handlePreviousPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","// src/components/Notices.js\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Hero from \"../../components/common/Hero/Hero\";\r\nimport Hero_notice from \"../../assets/img/Hero_notice.jpg\";\r\nimport { get_categories } from \"../../redux/actions/categories/categories\";\r\nimport {\r\n  get_blog_list_category,\r\n  get_blog_list_category_page,\r\n} from \"../../redux/actions/blog/blog\";\r\nimport BlogList from \"../../containers/notice/BlogList\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Notices = ({\r\n  get_categories,\r\n  categories,\r\n  get_blog_list_category,\r\n  get_blog_list_category_page,\r\n  posts,\r\n  count,\r\n  next,\r\n  previous,\r\n}) => {\r\n  const params = useParams();\r\n  const slug = params.slug;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await get_categories();\r\n        await get_blog_list_category(slug);\r\n      } catch (error) {\r\n        // Manejar el error estableciendo el estado de error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [get_categories, slug, get_blog_list_category]);\r\n  const handlePageChange = (page) => {\r\n    // Llamar a la acción para obtener la siguiente página de blogs de la categoría\r\n    get_blog_list_category_page(slug, page);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Hero\r\n        title=\"Noticias y Novedades\"\r\n        subtitle=\"Entérate de las últimas noticias y novedades de IKO Matsushima Chile\"\r\n        heroImage={Hero_notice}\r\n      />\r\n      <section className=\"notices-section\">\r\n        <BlogList\r\n          categories={categories && categories}\r\n          post={posts && posts}\r\n          get_blog_list_page={handlePageChange && handlePageChange}\r\n          count={count && count}\r\n        />\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.categories.categories,\r\n  posts: state.blog.blog_list_category,\r\n  count: state.blog.blog_count,\r\n  next: state.blog.blog_next,\r\n  previous: state.blog.blog_previous,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  // actions here\r\n  get_categories,\r\n  get_blog_list_category,\r\n  get_blog_list_category_page,\r\n})(Notices);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_BLOG_LIST_SUCCESS,\r\n  GET_BLOG_LIST_FAIL,\r\n  GET_BLOG_SUCCESS,\r\n  GET_BLOG_FAIL,\r\n  GET_BLOG_LIST_CATEGORIES_SUCCESS,\r\n  GET_BLOG_LIST_CATEGORIES_FAIL,\r\n  GET_SEARCH_BLOG_SUCCESS,\r\n  GET_SEARCH_BLOG_FAIL,\r\n  GET_AUTHOR_BLOG_LIST_SUCCESS,\r\n  GET_AUTHOR_BLOG_LIST_FAIL,\r\n  START_LOADING,\r\n  STOP_LOADING,\r\n  GET_RELATED_POSTS_SUCCESS,\r\n  GET_RELATED_POSTS_FAIL,\r\n} from \"./types\";\r\n\r\nexport const get_author_blog_list = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/author_list`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_AUTHOR_BLOG_LIST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_AUTHOR_BLOG_LIST_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_AUTHOR_BLOG_LIST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_author_blog_list_page = (page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/author_list?p=${page}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_AUTHOR_BLOG_LIST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_AUTHOR_BLOG_LIST_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_AUTHOR_BLOG_LIST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Ejemplo de manejo de carga y errores en una acción asincrónica\r\nexport const get_blog_list =\r\n  (limit = null) =>\r\n  async (dispatch) => {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    try {\r\n      // Añadir el parámetro 'limit' a la URL si se proporciona\r\n      const apiUrl = limit\r\n        ? `http://localhost:8000/api/blog/list?limit=${limit}`\r\n        : `http://localhost:8000/api/blog/list`;\r\n\r\n      const res = await axios.get(apiUrl);\r\n\r\n      dispatch({\r\n        type: GET_BLOG_LIST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching blog list:\", error.message);\r\n      dispatch({\r\n        type: GET_BLOG_LIST_FAIL,\r\n        error: \"Failed to fetch blog list. Please try again later.\",\r\n      });\r\n    } finally {\r\n      dispatch({ type: STOP_LOADING });\r\n    }\r\n  };\r\n\r\nexport const get_blog_list_page = (page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/list?p=${page}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BLOG_LIST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_blog_list_category = (slug, exclude) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n  const apiUrl = exclude\r\n    ? `http://localhost:8000/api/blog/related_posts?slug=${slug}&exclude=${exclude}`\r\n    : `http://localhost:8000/api/blog/by_category?slug=${slug}`;\r\n  try {\r\n    const res = await axios.get(apiUrl, config);\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_CATEGORIES_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_CATEGORIES_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BLOG_LIST_CATEGORIES_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_related_post =\r\n  (categorySlug, postSlug) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Realiza la solicitud a la API para obtener los posts relacionados\r\n      const res = await axios.get(\r\n        `http://localhost:8000/api/blog/related_posts?slug=${categorySlug}&exclude=${postSlug}`,\r\n        config\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        // Si la solicitud es exitosa, despacha la acción con los datos recibidos\r\n        dispatch({\r\n          type: GET_RELATED_POSTS_SUCCESS,\r\n          payload: res.data.posts, // Asegúrate de que la API devuelve un array de posts en `res.data.posts`\r\n        });\r\n      } else {\r\n        // Si la solicitud falla, despacha la acción de fallo\r\n        dispatch({\r\n          type: GET_RELATED_POSTS_FAIL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      // Maneja cualquier error que ocurra durante la solicitud\r\n      dispatch({\r\n        type: GET_RELATED_POSTS_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const get_blog_list_category_page = (slug, page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/by_category?slug=${slug}&p=${page}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_CATEGORIES_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_CATEGORIES_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BLOG_LIST_CATEGORIES_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_blog = (slug) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/detail/${slug}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_BLOG_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_BLOG_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BLOG_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const search_blog = (search_term) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/search?s=${search_term}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_SEARCH_BLOG_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_SEARCH_BLOG_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_SEARCH_BLOG_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const search_blog_page = (search_term, page) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/search?p=${page}&s=${search_term}`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_SEARCH_BLOG_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_SEARCH_BLOG_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_SEARCH_BLOG_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_popular_blogs = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/popular`,\r\n      config\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_BLOG_LIST_FAIL,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_BLOG_LIST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Tu acción en Redux (reducer.js)\r\nexport const get_related_posts = (postId, limit) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/api/blog/related/${postId}?limit=${limit}`\r\n    );\r\n\r\n    console.log(\"Related Posts Response:\", res.data.relatedPosts);\r\n\r\n    dispatch({\r\n      type: GET_RELATED_POSTS_SUCCESS,\r\n      payload: res.data.relatedPosts,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"Error fetching related posts:\", err);\r\n\r\n    dispatch({\r\n      type: GET_RELATED_POSTS_FAIL,\r\n    });\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORIES_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const get_categories = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try{\r\n\r\n        const res = await axios.get(`http://localhost:8000/api/category/list`, config)\r\n\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: GET_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type: GET_CATEGORIES_FAIL\r\n            });\r\n        }\r\n\r\n    } catch(err){\r\n        dispatch({\r\n            type: GET_CATEGORIES_FAIL\r\n        })\r\n    }\r\n}"],"names":["links","to","title","Navbar","location","useLocation","_jsx","className","children","_jsxs","Link","src","logo","alt","type","id","map","link","index","concat","pathname","Footer","Date","getFullYear","_ref","_Fragment","subtitle","heroImage","style","backgroundImage","backgroundSize","backgroundPosition","minHeight","color","backgroundAttachment","list_page","count","active","setActive","useState","listingsPerPage","totalPages","setTotalPages","useEffect","total","Math","ceil","items","number","push","Pagination","Item","onClick","visitPage","page","Prev","previous_number","newPage","disabled","Next","next_number","categories","currentCategory","split","pop","isActiveCategory","slug","isAllCategoriesActive","undefined","category","name","posts","Array","isArray","length","post","thumbnail","ImageDef","published","description","formattedDate","moment","isValid","format","shortDescription","slice","onError","e","target","onerror","Noticia","Cards","get_blog_list_page","next","previous","Categories","NoticiasList","SmallSetPagination","handleNextPage","event","nextPage","preventDefault","window","scrollTo","handlePreviousPage","previousPage","connect","state","blog","blog_list_category","blog_count","blog_next","blog_previous","get_categories","get_blog_list_category","get_blog_list_category_page","useParams","async","error","fetchData","handlePageChange","Layout","Hero","Hero_notice","BlogList","get_blog_list","limit","arguments","dispatch","START_LOADING","apiUrl","res","axios","get","GET_BLOG_LIST_SUCCESS","payload","data","console","message","GET_BLOG_LIST_FAIL","STOP_LOADING","config","headers","Accept","status","err","exclude","GET_BLOG_LIST_CATEGORIES_SUCCESS","GET_BLOG_LIST_CATEGORIES_FAIL","get_blog","GET_BLOG_SUCCESS","GET_BLOG_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL"],"sourceRoot":""}